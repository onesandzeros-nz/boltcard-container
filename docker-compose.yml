version: '3'
services:
  boltcard:
    build: 
      context: ./boltcard
      dockerfile: Dockerfile
    container_name: boltcard_main
    depends_on:
      - db
    restart: unless-stopped
    environment:
      - LOG_LEVEL=DEBUG
      - DB_HOST=db
      - DB_USER=cardapp
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=5432    
      - DB_NAME=card_db
    expose: 
      - "9000"
      - "9001"
    volumes:
      - ${PWD}/tls.cert:/boltcard/tls.cert
      - ${PWD}/admin.macaroon:/boltcard/admin.macaroon
    networks:
      - boltnet
  db:
    image: postgres
    container_name: boltcard_db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=cardapp
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=card_db
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./boltcard/select_db.sql:/docker-entrypoint-initdb.d/select_db.sql
      - ./boltcard/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
      - ./boltcard/settings.sql:/docker-entrypoint-initdb.d/settings.sql
    expose:
      - "5432"
    networks:
      - boltnet
  webserver:
    image: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ${PWD}/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - boltnet
  frontend:
    build:
      context: ./boltcard-gui
      dockerfile: Dockerfile
    container_name: boltcard_frontend
    depends_on:
      - db
    environment:
      - DOCUMENT_ROOT=/var/www/html
      - SS_TRUSTED_PROXY_IPS=*
      - SS_ENVIRONMENT_TYPE=${SS_ENVIRONMENT_TYPE}
      - SS_DATABASE_SERVER=db
      - SS_DATABASE_NAME=card_db
      - SS_DATABASE_USERNAME=cardapp
      - SS_DATABASE_PASSWORD=${DB_PASSWORD}
      - SS_DEFAULT_ADMIN_USERNAME=${SS_DEFAULT_ADMIN_USERNAME}
      - SS_DEFAULT_ADMIN_PASSWORD=${SS_DEFAULT_ADMIN_PASSWORD}
      - SS_DATABASE_CLASS=PostgreSQLDatabase
      - PORT=80
    expose:
      - "8080"
    networks:
      - boltnet
networks:
  boltnet:
volumes:
  db-data:
  caddy_data:
    external: true
  caddy_config:
  caddy_website:
